// https://leetcode.com/problems/capacity-to-ship-packages-within-d-days/
/*
A conveyor belt has packages that must be shipped from one port to another within D days.

The ith package on the conveyor belt has a weight of weights[i]. Each day, we load the ship with packages on the conveyor belt (in the order given by weights). We may not load more weight than the maximum weight capacity of the ship.

Return the least weight capacity of the ship that will result in all the packages on the conveyor belt being shipped within D days.
*/

class Solution {
public:
    int shipWithinDays(vector<int>& weights, int D) {
        int sum = 0; 
        int max = INT_MIN;
        for (int i = 0; i< weights.size(); i++)
        {
            sum = sum + weights[i];
            if (weights[i] > max)
                max = weights[i];
        }
        return binary_search(weights, D, max, sum);   
    }
private:
    int getDaysWithCapacity(const vector<int>& weights, int capacity)
    {
        int days = 0;
        int sum = weights[0];
        for (int i = 1; i < weights.size(); i++)
        {
            if (sum+weights[i] > capacity )
            {
                days++;
                sum = weights[i];
            }
            else
            {
                sum = sum+weights[i];
            }
        }
        
        days++;
        
        return days;
    }
    
    int binary_search(const vector<int>& weights, int D, int left, int right)
    {
        while (left <= right)
        {
            int mid = (left+right)/2;
            
            if (getDaysWithCapacity(weights, mid) <= D)
            {
                right = mid-1;
            }
            else
            {
                left = mid+1;
            }
        }
        
        return left;
    }
};