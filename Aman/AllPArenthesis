// https://leetcode.com/problems/generate-parentheses/
/*
Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.
*/

class Solution {
public:
    vector<string> generateParenthesis(int n) {
        vector<string> result;
        generateParenthesisRecursive("", n, 0, 0, result );
        return result;
    }
private:
    void generateParenthesisRecursive(string s, int n, int open, int close, vector<string>& result)
    {
        if (s.size() == 2*n)
        {
            result.push_back(s);
            return;
        }
        
        if (open < n)
        {
            generateParenthesisRecursive(s+"(", n, open+1, close, result);
        }
        
        if (open > close )
        {
            generateParenthesisRecursive(s+")", n, open, close+1, result);
        }
    }
};